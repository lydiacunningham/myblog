{"version":3,"sources":["webpack:///./src/markdown/2019/gitcommitmessage.md?455b","webpack:///./src/markdown/2019/gitcommitmessage.md"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","src","alt","pre","v-pre","class","script","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0d6342.531cb363.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('h1',[_vm._v(\"Enforcing Git Commit Message Style\")]),_c('p',[_c('img',{attrs:{\"src\":\"https://cdn-images-1.medium.com/max/800/1*iQSjyiA3zwGcshOGipSiXA.png?style=centerme\",\"alt\":\"\"}})]),_c('p',[_vm._v(\"I was working on a project that wanted commit messages in the following formats\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-bash\"}},[_vm._v(\"feat(feature-name): message text here (AEROGEAR-Number)\\nfix(feature-name): etc...\\ndocs(feature-name): etc...\\nbreaking(feature-name): etc...\\n\")])]),_c('p',[_vm._v(\"This was a pain to enforce and check manually so we decided to automate the check for this. Firstly I wrote a script to check the existing branch commits and see if they match the format\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-bash\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-meta\"}},[_vm._v(\"#!/bin/bash\\n\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"commit_message_check\")])]),_vm._v(\" (){\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# Get the current branch and apply it to a variable\")]),_vm._v(\"\\n      currentbranch=`git branch | grep \\\\* | cut -d \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"' '\")]),_vm._v(\" -f2`\\n\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# Gets the commits for the current branch and outputs to file\")]),_vm._v(\"\\n      git \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"log\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$currentbranch\")]),_vm._v(\" --pretty=format:\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"%H\\\"\")]),_vm._v(\" --not master > shafile.txt\\n\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# loops through the file an gets the message\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"for\")]),_vm._v(\" i \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"in\")]),_vm._v(\" `cat ./shafile.txt`;\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"do\")]),_vm._v(\" \\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# gets the git commit message based on the sha\")]),_vm._v(\"\\n      gitmessage=`git \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"log\")]),_vm._v(\" --format=%B -n 1 \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$i\")]),_vm._v(\"\\\"\")]),_vm._v(\"`\\n\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"####################### TEST STRINGS comment out line 13 to use #########################################\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"#gitmessage=\\\"feat sdasdsadsaas (AEROGEAR-asdsada)\\\"\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"#gitmessage=\\\"feat(some txt): some txt (AEROGEAR-****)\\\"\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"#gitmessage=\\\"docs(some txt): some txt (AEROGEAR-1234)\\\"\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"#gitmessage=\\\"fix(some txt): some txt (AEROGEAR-5678)\\\"\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"#########################################################################################################\")]),_vm._v(\"\\n      \\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# Checks gitmessage for string feat, fix, docs and breaking, if the messagecheck var is empty if fails\")]),_vm._v(\"\\n      messagecheck=`\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$gitmessage\")]),_vm._v(\" | grep -w \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"feat\\\\|fix\\\\|docs\\\\|breaking\\\"\")]),_vm._v(\"`\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\" [ -z \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$messagecheck\")]),_vm._v(\"\\\"\")]),_vm._v(\" ]\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"then\")]),_vm._v(\" \\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Your commit message must begin with one of the following\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"  feat(feature-name)\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"  fix(fix-name)\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"  docs(docs-change)\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\" \\\"\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"fi\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# check the gitmessage for the Jira number\")]),_vm._v(\"\\n      messagecheck=`\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$gitmessage\")]),_vm._v(\" | grep \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"(AEROGEAR-\\\"\")]),_vm._v(\"`\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\"  [ -z \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$messagecheck\")]),_vm._v(\"\\\"\")]),_vm._v(\" ]\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"then\")]),_vm._v(\" \\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Your commit message must end with the following\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"  (AEROGEAR-****)\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Where **** is the Jira number\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\" \\\"\")]),_vm._v(\" \\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"fi\")]),_vm._v(\"\\n      messagecheck=`\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$gitmessage\")]),_vm._v(\" | grep \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\": \\\"\")]),_vm._v(\"`\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\"  [ -z \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$messagecheck\")]),_vm._v(\"\\\"\")]),_vm._v(\" ]\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"then\")]),_vm._v(\" \\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Your commit message has a formatting error please take note of special characters '():' position and use in the example below\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"   type(some txt): some txt (AEROGEAR-****)\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Where 'type' is fix, feat, docs or breaking and **** is the Jira number\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\" \\\"\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"fi\")]),_vm._v(\"\\n\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# All checks run at the same time by pipeing from one grep to another\")]),_vm._v(\"\\n      messagecheck=`\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$gitmessage\")]),_vm._v(\" | grep -w \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"feat\\\\|fix\\\\|docs\\\\|breaking\\\"\")]),_vm._v(\" | grep \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"(AEROGEAR-\\\"\")]),_vm._v(\" | grep \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\": \\\"\")]),_vm._v(\"`\\n\\n\\n\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# check to see if the messagecheck var is empty\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\" [ -z \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$messagecheck\")]),_vm._v(\"\\\"\")]),_vm._v(\" ]\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"then\")]),_vm._v(\"  \\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"The commit message with sha: '\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$i\")]),_vm._v(\"' failed \\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Please review the following :\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\" \\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$gitmessage\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\" \\\"\")]),_vm._v(\"\\n            rm shafile.txt >/dev/null 2>&1\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"set\")]),_vm._v(\" -o errexit\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"else\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$messagecheck\")]),_vm._v(\"\\\"\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"'\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$i\")]),_vm._v(\"' commit message passed\\\"\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"fi\")]),_vm._v(\"  \\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"done\")]),_vm._v(\"\\n      rm shafile.txt  >/dev/null 2>&1\\n}\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# Calling the function\")]),_vm._v(\"\\ncommit_message_check \\n\")])]),_c('p',[_vm._v(\"I copied the script to a script directory of the root of the project and was initially using it with Circle ci to check the commit during a build.\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-yml\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-attr\"}},[_vm._v(\"steps:\")]),_vm._v(\"      \\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-bullet\"}},[_vm._v(\"  -\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"checkout\")]),_vm._v(\"      \\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-attr\"}},[_vm._v(\"  - run:\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"./scripts/commit-filter-check.sh\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"It was decided that a local check would more useful, we then decided to use githooks to run the script. There is a \"),_c('strong',[_vm._v(\".git/hook\")]),_vm._v(\" directory in every git project with sample git hooks.\")]),_c('p',[_c('img',{attrs:{\"src\":\"https://cdn-images-1.medium.com/max/800/1*Nw2sU5pVk16Sq63zxtvwzQ.png?style=centerme\",\"alt\":\"\"}})]),_c('p',[_vm._v(\"Remove the \"),_c('strong',[_vm._v(\".sample\")]),_vm._v(\" and the hook script becomes live in this case I used the \"),_c('strong',[_vm._v(\"commit-msg\")]),_vm._v(\" git hook and use it to run my script. The hook is triggered by a failure with an exit 1\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-bash\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-meta\"}},[_vm._v(\"#!/bin/sh\\n\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# Run the script and get the return code if successful of if fails\")]),_vm._v(\"\\n./scripts/commit-filter-check.sh && rc=$? || rc=$?\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"return\")]),_vm._v(\" code : \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$rc\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$rc\")]),_vm._v(\" == 1\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"then\")]),_vm._v(\"\\n\\t\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Script return code 1 so commit failed\\\"\")]),_vm._v(\"\\n\\t\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"exit\")]),_vm._v(\" 1\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"else\")]),_vm._v(\"\\n\\t\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"echo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"No error returned so commit successful\\\"\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"fi\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"Only issue was the \"),_c('strong',[_vm._v(\".git\")]),_vm._v(\" directory never gets seen by git commit. So I needed a way to push my changes and allow others to use them. Moving commit-msg file to a \"),_c('strong',[_vm._v(\".githook\")]),_vm._v(\" directory allows it to be committed. You can then add a line to the setup script of the project to create a sym link to the local \"),_c('strong',[_vm._v(\".git/hooks\")]),_vm._v(\" directory\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-bash\"}},[_vm._v(\"ln -sf $\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$PWD\")]),_vm._v(\"/.githooks/* $\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-variable\"}},[_vm._v(\"$PWD\")]),_vm._v(\"/.git/hooks/\\n\")])]),_c('p',[_vm._v(\"Now every commit message is checked and will fail if it doesn’t match the format\")])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./gitcommitmessage.md?vue&type=template&id=026f36a2&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}