(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ae975"],{"0b5b":function(s,e,a){"use strict";a.r(e);var t=function(){var s=this,e=s.$createElement;s._self._c;return s._m(0)},r=[function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("section",[a("h1",[s._v("Write a Ansible module with Python")]),a("p",[a("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*aVz3yH6SXGuCxU4pmr-KZw.jpeg",alt:""}})]),a("p",[s._v("Ansible has a number of modules available "),a("a",{attrs:{href:"https://docs.ansible.com/ansible/latest/modules/modules_by_category.html"}},[s._v("here")]),s._v(". But I wished to write my own. Ansible has integration with Python to enable this. I will start with a hello world module and work on from there.")]),a("h2",[s._v("Hello World Module")]),a("p",[s._v("Create a playbook to call your new module with hello_world.yml, note we call the module with hello_world: the module will return the result and debug will display result.")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-yml"}},[a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("- hosts:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("localhost")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("  tasks:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("  - name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Test")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("that")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("my")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("hello_world")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("module")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("works")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("    hello_world:")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("    register:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("result")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("  - debug:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("var=result")]),s._v("  \n")])]),a("p",[s._v("Create library directory with a python file in the root of your project")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":""}},[s._v("hello_world.yml\n[library]\n   |_ hello_world.py\n")])]),a("p",[s._v("Add the following content to the hello_world.py")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-python"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("#!/usr/bin/python")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("from")]),s._v(" ansible.module_utils.basic "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" *\n\n"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(":")]),s._v("\n    module = AnsibleModule(argument_spec={})\n    theReturnValue = {"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"hello"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"world"')]),s._v("}\n    module.exit_json(changed="),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("False")]),s._v(", meta=theReturnValue)\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" __name__ == "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'__main__'")]),s._v(":\n    main()\n")])]),a("blockquote",[a("p",[s._v("You need "),a("strong",[s._v("#!/usr/bin/python")])])]),a("blockquote",[a("p",[s._v("You need to import the ansible.module_utils.basic to use "),a("strong",[s._v("AnsibleModule")])])]),a("blockquote",[a("p",[s._v("You need a "),a("strong",[s._v("main()")])])]),a("blockquote",[a("p",[s._v("AnsibleModule is used to pass parameters in and out of the module it this case we are only passing back meta with the value of "),a("strong",[s._v("theReturnValue")]),s._v(".")])]),a("blockquote",[a("p",[a("strong",[s._v("Note")]),s._v(": The argument_spec is an empty object to show nothing is being passed into the AnsibleModule.")])]),a("p",[s._v("That’s it the hello_world playbook can be run with")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("$ ansible-playbook hello_world.yml\n")])]),a("p",[s._v("This will return a hello world when run as the meta data")]),a("p",[a("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*qwqmhXM2n2VFpu7JbENfaQ.png?style=centerme",alt:""}})]),a("p",[s._v("That is it your hello world module finished.")]),a("h2",[s._v("Pass variables in and out of a Python Module")]),a("p",[s._v("I was working on an upgrade script and I needed to bump the Semantic Versioning i.e. bumping the minor version of 1.1.1, Ansible handles this poorly as it is not a float or a int. So writing a small module to handle this makes sense. To do this I need to pass a variable to the python module and then bump the version and pass a value back.")]),a("p",[s._v("Again create a file "),a("code",{pre:!0},[s._v("version_change.yml")]),s._v(" in the root directory and a library directory with your python file called "),a("code",{pre:!0},[s._v("version_change.py")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-yml"}},[a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("- hosts:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("localhost")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("  tasks:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("  - name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Test")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("that")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("my")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("change_version")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("module")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("works")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("    version_change:")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("      version_name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Before"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("      version_no:")]),s._v("  "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.1")]),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v(".1")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("      unchanged_value:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"This will pass through"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("    register:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("result")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("  - debug:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("var=result")]),s._v("\n")])]),a("p",[s._v("So as an example I am passing three variable to the module called version_change (version_name, version_no and unchanged_value) in the version_changed.py file")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-py"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("#!/usr/bin/python")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("from")]),s._v(" ansible.module_utils.basic "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" *\n\n"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(":")]),s._v("\n\n    fields = {\n        "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"version_no"')]),s._v(": {"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"default"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("True")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"type"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"str"')]),s._v("},\n        "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"version_name"')]),s._v(": {"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"default"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("True")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"type"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"str"')]),s._v("},\n        "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"unchanged_value"')]),s._v(": {"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"default"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("True")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"type"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"str"')]),s._v("}\n    }\n\n    module = AnsibleModule(argument_spec=fields)\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# change the name")]),s._v("\n    module.params.update({"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"version_name"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"After"')]),s._v("})\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# bump minor and patch version")]),s._v("\n    mylist = module.params["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"version_no"')]),s._v("].split("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'.'")]),s._v(")\n    mylist["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("] = str(int(mylist["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("]) + "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(")\n    mylist["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("] = str(int(mylist["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("]) + "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(")\n    mystr= "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'.'")]),s._v(".join(mylist)\n    module.params.update({"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"version_no"')]),s._v(": mystr})\n\n    \n    module.exit_json(changed="),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("True")]),s._v(", meta=module.params)\n    \n")])]),a("blockquote",[a("p",[s._v("We handle the incoming variables with the "),a("code",{pre:!0},[s._v("fields")]),s._v(" dictionary we can use “default” or “required” Boolean and a “type” in this case we use “str”")])]),a("blockquote",[a("p",[s._v("All variables need to be declared in the fields dict, weather you use them or not")])]),a("blockquote",[a("p",[s._v("The "),a("code",{pre:!0},[s._v("fields")]),s._v(" are passed in as "),a("code",{pre:!0},[s._v("argument_spec")]),s._v(" to the "),a("code",{pre:!0},[s._v("AnsibleModule")])])]),a("blockquote",[a("p",[s._v("We can then access the "),a("code",{pre:!0},[s._v("module.params")]),s._v(" using python dictionary methods")])]),a("blockquote",[a("p",[s._v("We then pass the "),a("code",{pre:!0},[s._v("module.params")]),s._v(" back as meta to the playbook")])]),a("blockquote",[a("p",[s._v("We can then run the playbook with")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("$ ansible-playbook version_change.yml\n")])]),a("p",[s._v("And you get the result , as you can see the unchanged_value remains unchanged and , the version_name and version_no are changed")]),a("p",[a("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*xJZOjUG7ULrZYfE09rU7Qw.png?style=centerme",alt:""}})]),a("p",[s._v("Not needed but as a final step you can add string for documentation and examples at the top of the module. See the following "),a("a",{attrs:{href:"https://github.com/austincunningham/python-ansible.git"}},[s._v("Git repo")]),s._v(" for the code for this basic demo.")])])}],n=a("2877"),l={},p=Object(n["a"])(l,t,r,!1,null,null,null);e["default"]=p.exports}}]);
//# sourceMappingURL=chunk-2d0ae975.4e30eca7.js.map